class Guardarropa{
    list prendas;
    list propuestas;
    list propuestasAceptadas;

    addPrenda(prenda){
        if(!prendas.contains(prenda)) throw new PrendaNotExists();
        prendas.add(prenda);
    }

    removePrenda(prenda){
        if(!prendas.contains(prenda)) throw new PrendaNotExists();
        prendas.remove(prenda);
        propuestas.filter()
    }

    addPropuesta(propuesta){
        propuestas.add(propuesta);
    }

    removePropuesta(propuesta){
        propuestas.remove(propuesta);
    }

    removePropuestasRelacionadasA(prenda){
        propuestas.filter(p -> p.prenda == prenda).forEach(p -> propuestas.remove(p));
        propuestasAceptadas.filter(p -> p.prenda == prenda).forEach(p -> propuestasAceptadas.remove(p));
    }

    getPropuestas(){return this.propuestas}

    aceptarPropuesta(propuesta){
        if(!propuestas.contains(propuesta)) throw new PropuestaNotExists();
        removePropuesta(propuesta);
        propuestasAceptadas.add(propuesta);
        propuesta.afectarGuardarropa(); 
    }

    deshacerPropuesta(propuesta){
        if(!propuestasAceptadas.contains(propuesta)) throw new PropuestaNotExists();
        propuestasAceptadas.remove(propuesta);
        addPropuesta(propuesta);
        propuesta.desafectarGuardarropa();
    }

    rechazarPropuesta(propuesta){
        if(!propuestas.contains(propuesta)) throw new PropuestaNotExists();
        removePropuesta(propuests);
    }
}